/* tslint:disable */
/* eslint-disable */
/**
 * django-allauth: Headless API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Configuration of the Django `allauth.account` app.
 * 
 * @export
 * @interface AccountConfiguration
 */
export interface AccountConfiguration {
    /**
     * 
     * @type {Array<string>}
     * @memberof AccountConfiguration
     */
    loginMethods?: Array<AccountConfigurationLoginMethodsEnum>;
    /**
     * 
     * @type {boolean}
     * @memberof AccountConfiguration
     */
    isOpenForSignup: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AccountConfiguration
     */
    emailVerificationByCodeEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AccountConfiguration
     */
    loginByCodeEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AccountConfiguration
     */
    passwordResetByCodeEnabled?: boolean;
}


/**
 * @export
 */
export const AccountConfigurationLoginMethodsEnum = {
    Email: 'email',
    Username: 'username'
} as const;
export type AccountConfigurationLoginMethodsEnum = typeof AccountConfigurationLoginMethodsEnum[keyof typeof AccountConfigurationLoginMethodsEnum];


/**
 * Check if a given object implements the AccountConfiguration interface.
 */
export function instanceOfAccountConfiguration(value: object): value is AccountConfiguration {
    if (!('isOpenForSignup' in value) || value['isOpenForSignup'] === undefined) return false;
    if (!('emailVerificationByCodeEnabled' in value) || value['emailVerificationByCodeEnabled'] === undefined) return false;
    if (!('loginByCodeEnabled' in value) || value['loginByCodeEnabled'] === undefined) return false;
    return true;
}

export function AccountConfigurationFromJSON(json: any): AccountConfiguration {
    return AccountConfigurationFromJSONTyped(json, false);
}

export function AccountConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountConfiguration {
    if (json == null) {
        return json;
    }
    return {
        
        'loginMethods': json['login_methods'] == null ? undefined : json['login_methods'],
        'isOpenForSignup': json['is_open_for_signup'],
        'emailVerificationByCodeEnabled': json['email_verification_by_code_enabled'],
        'loginByCodeEnabled': json['login_by_code_enabled'],
        'passwordResetByCodeEnabled': json['password_reset_by_code_enabled'] == null ? undefined : json['password_reset_by_code_enabled'],
    };
}

export function AccountConfigurationToJSON(json: any): AccountConfiguration {
    return AccountConfigurationToJSONTyped(json, false);
}

export function AccountConfigurationToJSONTyped(value?: AccountConfiguration | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'login_methods': value['loginMethods'],
        'is_open_for_signup': value['isOpenForSignup'],
        'email_verification_by_code_enabled': value['emailVerificationByCodeEnabled'],
        'login_by_code_enabled': value['loginByCodeEnabled'],
        'password_reset_by_code_enabled': value['passwordResetByCodeEnabled'],
    };
}

