/* tslint:disable */
/* eslint-disable */
/**
 * django-allauth: Headless API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RequestLoginCodeEmail } from './RequestLoginCodeEmail';
import {
    RequestLoginCodeEmailFromJSON,
    RequestLoginCodeEmailFromJSONTyped,
    RequestLoginCodeEmailToJSON,
    RequestLoginCodeEmailToJSONTyped,
} from './RequestLoginCodeEmail';
import type { RequestLoginCodePhone } from './RequestLoginCodePhone';
import {
    RequestLoginCodePhoneFromJSON,
    RequestLoginCodePhoneFromJSONTyped,
    RequestLoginCodePhoneToJSON,
    RequestLoginCodePhoneToJSONTyped,
} from './RequestLoginCodePhone';

/**
 * 
 * @export
 * @interface RequestLoginCode
 */
export interface RequestLoginCode {
    /**
     * The phone number.
     * 
     * @type {string}
     * @memberof RequestLoginCode
     */
    phone: string;
    /**
     * The email address.
     * 
     * @type {string}
     * @memberof RequestLoginCode
     */
    email: string;
}

/**
 * Check if a given object implements the RequestLoginCode interface.
 */
export function instanceOfRequestLoginCode(value: object): value is RequestLoginCode {
    if (!('phone' in value) || value['phone'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function RequestLoginCodeFromJSON(json: any): RequestLoginCode {
    return RequestLoginCodeFromJSONTyped(json, false);
}

export function RequestLoginCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestLoginCode {
    if (json == null) {
        return json;
    }
    return {
        
        'phone': json['phone'],
        'email': json['email'],
    };
}

export function RequestLoginCodeToJSON(json: any): RequestLoginCode {
    return RequestLoginCodeToJSONTyped(json, false);
}

export function RequestLoginCodeToJSONTyped(value?: RequestLoginCode | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'phone': value['phone'],
        'email': value['email'],
    };
}

