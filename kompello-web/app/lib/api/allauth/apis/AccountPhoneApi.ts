/* tslint:disable */
/* eslint-disable */
/**
 * django-allauth: Headless API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AllauthClientV1AccountEmailPost401Response,
  AllauthClientV1AccountPhonePostRequest,
  AuthenticationResponse,
  ConflictResponse,
  ErrorResponse,
  PhoneNumberChangeResponse,
  PhoneNumbersResponse,
} from '../models/index';
import {
    AllauthClientV1AccountEmailPost401ResponseFromJSON,
    AllauthClientV1AccountEmailPost401ResponseToJSON,
    AllauthClientV1AccountPhonePostRequestFromJSON,
    AllauthClientV1AccountPhonePostRequestToJSON,
    AuthenticationResponseFromJSON,
    AuthenticationResponseToJSON,
    ConflictResponseFromJSON,
    ConflictResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    PhoneNumberChangeResponseFromJSON,
    PhoneNumberChangeResponseToJSON,
    PhoneNumbersResponseFromJSON,
    PhoneNumbersResponseToJSON,
} from '../models/index';

export interface AllauthClientV1AccountPhoneGetRequest {
    client: AllauthClientV1AccountPhoneGetClientEnum;
    xSessionToken?: string;
}

export interface AllauthClientV1AccountPhonePostOperationRequest {
    client: AllauthClientV1AccountPhonePostOperationClientEnum;
    xSessionToken?: string;
    allauthClientV1AccountPhonePostRequest?: AllauthClientV1AccountPhonePostRequest;
}

/**
 * 
 */
export class AccountPhoneApi extends runtime.BaseAPI {

    /**
     * Retrieves the phone number of the account, if any. Note that while the endpoint returns a list of phone numbers, at most one entry is returned. 
     * Get the phone number
     */
    async allauthClientV1AccountPhoneGetRaw(requestParameters: AllauthClientV1AccountPhoneGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PhoneNumbersResponse>> {
        if (requestParameters['client'] == null) {
            throw new runtime.RequiredError(
                'client',
                'Required parameter "client" was null or undefined when calling allauthClientV1AccountPhoneGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['xSessionToken'] != null) {
            headerParameters['X-Session-Token'] = String(requestParameters['xSessionToken']);
        }

        const response = await this.request({
            path: `/_allauth/{client}/v1/account/phone`.replace(`{${"client"}}`, encodeURIComponent(String(requestParameters['client']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PhoneNumbersResponseFromJSON(jsonValue));
    }

    /**
     * Retrieves the phone number of the account, if any. Note that while the endpoint returns a list of phone numbers, at most one entry is returned. 
     * Get the phone number
     */
    async allauthClientV1AccountPhoneGet(requestParameters: AllauthClientV1AccountPhoneGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PhoneNumbersResponse> {
        const response = await this.allauthClientV1AccountPhoneGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * The following functionality is available:  - Initiate the phone number change process for signed in users. - Change to a new phone number during the phone number verification   process at signup for unauthenticated users. Note that this requires:   `ACCOUNT_PHONE_VERIFICATION_SUPPORTS_CHANGE = True`.  In both cases, after posting a new phone number, proceed with the phone verification endpoint to confirm the change of the phone number by posting the verification code. 
     * Change the phone number 
     */
    async allauthClientV1AccountPhonePostRaw(requestParameters: AllauthClientV1AccountPhonePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PhoneNumberChangeResponse>> {
        if (requestParameters['client'] == null) {
            throw new runtime.RequiredError(
                'client',
                'Required parameter "client" was null or undefined when calling allauthClientV1AccountPhonePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['xSessionToken'] != null) {
            headerParameters['X-Session-Token'] = String(requestParameters['xSessionToken']);
        }

        const response = await this.request({
            path: `/_allauth/{client}/v1/account/phone`.replace(`{${"client"}}`, encodeURIComponent(String(requestParameters['client']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AllauthClientV1AccountPhonePostRequestToJSON(requestParameters['allauthClientV1AccountPhonePostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PhoneNumberChangeResponseFromJSON(jsonValue));
    }

    /**
     * The following functionality is available:  - Initiate the phone number change process for signed in users. - Change to a new phone number during the phone number verification   process at signup for unauthenticated users. Note that this requires:   `ACCOUNT_PHONE_VERIFICATION_SUPPORTS_CHANGE = True`.  In both cases, after posting a new phone number, proceed with the phone verification endpoint to confirm the change of the phone number by posting the verification code. 
     * Change the phone number 
     */
    async allauthClientV1AccountPhonePost(requestParameters: AllauthClientV1AccountPhonePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PhoneNumberChangeResponse> {
        const response = await this.allauthClientV1AccountPhonePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const AllauthClientV1AccountPhoneGetClientEnum = {
    App: 'app',
    Browser: 'browser'
} as const;
export type AllauthClientV1AccountPhoneGetClientEnum = typeof AllauthClientV1AccountPhoneGetClientEnum[keyof typeof AllauthClientV1AccountPhoneGetClientEnum];
/**
 * @export
 */
export const AllauthClientV1AccountPhonePostOperationClientEnum = {
    App: 'app',
    Browser: 'browser'
} as const;
export type AllauthClientV1AccountPhonePostOperationClientEnum = typeof AllauthClientV1AccountPhonePostOperationClientEnum[keyof typeof AllauthClientV1AccountPhonePostOperationClientEnum];
