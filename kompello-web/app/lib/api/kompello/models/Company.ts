/* tslint:disable */
/* eslint-disable */
/**
 * Kompello Server API
 * Kompello API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Company
 */
export interface Company {
    /**
     * 
     * @type {string}
     * @memberof Company
     */
    readonly uuid: string;
    /**
     * 
     * @type {string}
     * @memberof Company
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Company
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Company
     */
    readonly logo: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Company
     */
    readonly createdOn: Date;
    /**
     * 
     * @type {Date}
     * @memberof Company
     */
    readonly modifiedOn: Date;
}

/**
 * Check if a given object implements the Company interface.
 */
export function instanceOfCompany(value: object): value is Company {
    if (!('uuid' in value) || value['uuid'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('logo' in value) || value['logo'] === undefined) return false;
    if (!('createdOn' in value) || value['createdOn'] === undefined) return false;
    if (!('modifiedOn' in value) || value['modifiedOn'] === undefined) return false;
    return true;
}

export function CompanyFromJSON(json: any): Company {
    return CompanyFromJSONTyped(json, false);
}

export function CompanyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Company {
    if (json == null) {
        return json;
    }
    return {
        
        'uuid': json['uuid'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'logo': json['logo'],
        'createdOn': (new Date(json['created_on'])),
        'modifiedOn': (new Date(json['modified_on'])),
    };
}

export function CompanyToJSON(json: any): Company {
    return CompanyToJSONTyped(json, false);
}

export function CompanyToJSONTyped(value?: Omit<Company, 'uuid'|'logo'|'created_on'|'modified_on'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
    };
}

