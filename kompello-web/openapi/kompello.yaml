openapi: 3.0.3
info:
  title: Kompello Server API
  version: 1.0.0
  description: Kompello API Documentation
  contact:
    name: 'Github: Kompello'
    url: https://github.com/KBurgTech/kompello
  license:
    name: 'Licence: MIT'
    url: https://github.com/KBurgTech/kompello/blob/main/LICENSE
paths:
  /api/companies/:
    get:
      operationId: companies_list
      tags:
      - companies
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: ''
    post:
      operationId: companies_create
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/companies/{uuid}/:
    get:
      operationId: companies_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: companies_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: companies_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: companies_destroy
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/companies/{uuid}/members/:
    get:
      operationId: company_members
      description: Get all members of a company (does not include customers).
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/companies/{uuid}/members_add/:
    patch:
      operationId: company_members_add
      description: Adds members to a company (does not include customers).
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUuidList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUuidList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUuidList'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/companies/{uuid}/members_delete/:
    patch:
      operationId: company_members_delete
      description: Removes members from a company (does not include customers).
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUuidList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUuidList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUuidList'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/system/get_csrf_token/:
    get:
      operationId: system_get_csrf_token
      description: Get the CSRF token for the current session.
      tags:
      - system
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csrf'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{uuid}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{uuid}/set_password/:
    post:
      operationId: users_set_password
      description: Change a users password
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Password'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Password'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Password'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
        '403':
          description: No response body
  /api/users/me/:
    get:
      operationId: users_me
      description: Gets the currently logged in user
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Company:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        logo:
          type: string
          format: uri
          readOnly: true
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_on
      - logo
      - modified_on
      - name
      - uuid
    Csrf:
      type: object
      properties:
        csrfToken:
          type: string
      required:
      - csrfToken
    Password:
      type: object
      properties:
        password:
          type: string
      required:
      - password
    PatchedCompany:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        logo:
          type: string
          format: uri
          readOnly: true
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
    PatchedUuidList:
      type: object
      properties:
        uuids:
          type: array
          items:
            type: string
            format: uuid
    User:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_on
      - email
      - modified_on
      - uuid
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
